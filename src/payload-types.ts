/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    images: Image;
    icons: Icon;
    pages: Page;
    publications: Publication;
    publicationCategories: PublicationCategory;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    pages: {
      permittedUsers: 'users';
    };
    publications: {
      permittedUsers: 'users';
    };
    publicationCategories: {
      categoryJoin: 'publications';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    icons: IconsSelect<false> | IconsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    publications: PublicationsSelect<false> | PublicationsSelect<true>;
    publicationCategories: PublicationCategoriesSelect<false> | PublicationCategoriesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    siteSettings: SiteSetting;
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    siteSettings: SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  role?: ('Admin' | 'Editor' | 'Guest') | null;
  /**
   * Allow editor access.
   */
  siteAccess?: (string | Page)[] | null;
  /**
   * Allow editor access.
   */
  pubAccess?: (string | Publication)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug?: string | null;
  hero: {
    type: 'highImpact' | 'lowImpact' | 'banner' | 'none';
    content?: {
      heading?: string | null;
      image: string | Image;
      promoImg?: (string | null) | Image;
    };
  };
  sections?:
    | (
        | {
            headshot?: (string | null) | Image;
            headline?: string | null;
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'bio';
          }
        | {
            filter?: string | null;
            content: (string | PublicationCategory)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'archive';
          }
        | {
            image?: (string | null) | Image;
            heading?: string | null;
            questions?:
              | {
                  q?: string | null;
                  a?: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  } | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'accordion';
          }
        | {
            bgImg?: (string | null) | Image;
            info?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            formFields?:
              | {
                  label?: string | null;
                  fieldType: 'Text' | 'Email' | 'Textarea' | 'Button';
                  placeholder?: string | null;
                  buttonAction?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'form';
          }
        | {
            bgImg?: (string | Image)[] | null;
            header?: {
              tagline?: string | null;
              title?: string | null;
              subtitle?: string | null;
            };
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            featuredItems?: (string | Publication)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'featuredContent';
          }
        | {
            header?: {
              title?: string | null;
              subtitle?: string | null;
            };
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            list?:
              | {
                  itemType?: ('Card' | 'Button') | null;
                  listCard?: {
                    title?: string | null;
                    rate?: string | null;
                    description?: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    } | null;
                    note?: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    } | null;
                  };
                  listButton?: {
                    body?: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    } | null;
                    label?: string | null;
                    linkType?: ('Internal' | 'External') | null;
                    internalLink?: {
                      targetPage?: (string | null) | Page;
                      targetSection?: string | null;
                    };
                    externalLink?: {
                      url?: string | null;
                      targetType?: ('_self' | '_blank') | null;
                    };
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'listBlock';
          }
        | {
            image?: (string | null) | Image;
            tagline?: string | null;
            heading?: string | null;
            description?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaBlock';
          }
        | {
            images?: (string | Image)[] | null;
            tagline?: string | null;
            title?: string | null;
            link?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaWTitle';
          }
        | {
            img?: (string | null) | Image;
            heading?: string | null;
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            buttonLabel?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'newsletter';
          }
        | {
            id?: string | null;
            blockName?: string | null;
            blockType: 'promo';
          }
        | {
            textColumns?:
              | {
                  textColumn?: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  } | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textColumns';
          }
      )[]
    | null;
  layoutSections?:
    | (
        | {
            background?: {
              sectionWidth?: ('Full' | 'Content') | null;
              type?: ('none' | 'clr' | 'img') | null;
              clr?: string | null;
              img?: {};
            };
            padding?: {
              type?: ('none' | 'py' | 'px' | 'p') | null;
              size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
            };
            sections?: ('colFull' | 'col2' | 'col3' | 'col4' | 'col6') | null;
            gap?: {
              gapSize?: ('none' | 'gap-xs' | 'gap-sm' | 'gap-md' | 'gap-lg' | 'gap-xl') | null;
              inlineGapSize?: ('none' | 'gap-x-xs' | 'gap-x-sm' | 'gap-x-md' | 'gap-x-lg' | 'gap-x-xl') | null;
              blockGapSize?: ('none' | 'gap-y-xs' | 'gap-y-sm' | 'gap-y-md' | 'gap-y-lg' | 'gap-y-xl') | null;
              separateGap?: boolean | null;
            };
            components?:
              | (
                  | TextBlock
                  | {
                      position?: string | null;
                      position_halves?: ('colSpanFull' | 'colSpan6') | null;
                      position_thirds?: ('colSpanFull' | 'colSpan4' | 'colSpan8') | null;
                      position_quarters?: ('colSpanFull' | 'colSpan6' | 'colSpan3' | 'colSpan9') | null;
                      position_sixths?:
                        | ('colSpanFull' | 'colSpan6' | 'colSpan4' | 'colSpan8' | 'colSpan2' | 'colSpan10')
                        | null;
                      rows?: ('row-span-1' | 'row-span-2' | 'row-span-3') | null;
                      padding?: {
                        type?: ('none' | 'py' | 'px' | 'p') | null;
                        size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
                      };
                      image?: (string | null) | Image;
                      aspectRatio?:
                        | ('aspect-auto' | 'aspect-square' | 'aspect-video' | 'aspect-[2/3]' | 'aspect-[3/4]')
                        | null;
                      imagePosition?:
                        | (
                            | 'object-top'
                            | 'object-top-left'
                            | 'object-top-right'
                            | 'object-left'
                            | 'object-center'
                            | 'object-right'
                            | 'object-bottom'
                            | 'object-bottom-left'
                            | 'object-bottom-right'
                          )
                        | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'image';
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'grid';
          }
        | {
            background?: {
              sectionWidth?: ('Full' | 'Content') | null;
              type?: ('none' | 'clr' | 'img') | null;
              clr?: string | null;
              img?: {};
            };
            padding?: {
              type?: ('none' | 'py' | 'px' | 'p') | null;
              size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
            };
            components?:
              | (
                  | TextBlock
                  | {
                      position?: string | null;
                      position_halves?: ('colSpanFull' | 'colSpan6') | null;
                      position_thirds?: ('colSpanFull' | 'colSpan4' | 'colSpan8') | null;
                      position_quarters?: ('colSpanFull' | 'colSpan6' | 'colSpan3' | 'colSpan9') | null;
                      position_sixths?:
                        | ('colSpanFull' | 'colSpan6' | 'colSpan4' | 'colSpan8' | 'colSpan2' | 'colSpan10')
                        | null;
                      rows?: ('row-span-1' | 'row-span-2' | 'row-span-3') | null;
                      padding?: {
                        type?: ('none' | 'py' | 'px' | 'p') | null;
                        size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
                      };
                      image?: (string | null) | Image;
                      aspectRatio?:
                        | ('aspect-auto' | 'aspect-square' | 'aspect-video' | 'aspect-[2/3]' | 'aspect-[3/4]')
                        | null;
                      imagePosition?:
                        | (
                            | 'object-top'
                            | 'object-top-left'
                            | 'object-top-right'
                            | 'object-left'
                            | 'object-center'
                            | 'object-right'
                            | 'object-bottom'
                            | 'object-bottom-left'
                            | 'object-bottom-right'
                          )
                        | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'image';
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'flex';
          }
      )[]
    | null;
  permittedUsers?: {
    docs?: (string | User)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  title: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    screen?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationCategories".
 */
export interface PublicationCategory {
  id: string;
  title: string;
  categoryJoin?: {
    docs?: (string | Publication)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publications".
 */
export interface Publication {
  id: string;
  title: string;
  slug?: string | null;
  blurb?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  coverImg?: (string | null) | Image;
  quotes?:
    | {
        quote?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  testimonials?:
    | {
        quote?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        quotee?: string | null;
        id?: string | null;
      }[]
    | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  releaseDetails?: {
    category?: (string | null) | PublicationCategory;
    isPublished?: ('In Early Development' | 'Draft' | 'Editing Stage' | 'On Submission' | 'TBA' | 'Published') | null;
    publishedDate?: string | null;
    publishedIn?:
      | {
          publicationType?: ('Collection' | 'Literary magazine') | null;
          magazine?: {
            title?: string | null;
            date?: string | null;
            url?: string | null;
          };
          collectionTitle?: (string | null) | Publication;
          id?: string | null;
        }[]
      | null;
  };
  retailerLinks?:
    | {
        retailer?: string | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  categoryName?: string | null;
  releaseDate?: string | null;
  permittedUsers?: {
    docs?: (string | User)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Text Block".
 */
export interface TextBlock {
  position?: string | null;
  position_halves?: ('colSpanFull' | 'colSpan6') | null;
  position_thirds?: ('colSpanFull' | 'colSpan4' | 'colSpan8') | null;
  position_quarters?: ('colSpanFull' | 'colSpan6' | 'colSpan3' | 'colSpan9') | null;
  position_sixths?: ('colSpanFull' | 'colSpan6' | 'colSpan4' | 'colSpan8' | 'colSpan2' | 'colSpan10') | null;
  padding?: {
    type?: ('none' | 'py' | 'px' | 'p') | null;
    size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
  };
  body?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'richText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icons".
 */
export interface Icon {
  id: string;
  title: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'images';
        value: string | Image;
      } | null)
    | ({
        relationTo: 'icons';
        value: string | Icon;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'publications';
        value: string | Publication;
      } | null)
    | ({
        relationTo: 'publicationCategories';
        value: string | PublicationCategory;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  role?: T;
  siteAccess?: T;
  pubAccess?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  title?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        screen?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icons_select".
 */
export interface IconsSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  hero?:
    | T
    | {
        type?: T;
        content?:
          | T
          | {
              heading?: T;
              image?: T;
              promoImg?: T;
            };
      };
  sections?:
    | T
    | {
        bio?:
          | T
          | {
              headshot?: T;
              headline?: T;
              body?: T;
              id?: T;
              blockName?: T;
            };
        archive?:
          | T
          | {
              filter?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        accordion?:
          | T
          | {
              image?: T;
              heading?: T;
              questions?:
                | T
                | {
                    q?: T;
                    a?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              bgImg?: T;
              info?: T;
              formFields?:
                | T
                | {
                    label?: T;
                    fieldType?: T;
                    placeholder?: T;
                    buttonAction?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        featuredContent?:
          | T
          | {
              bgImg?: T;
              header?:
                | T
                | {
                    tagline?: T;
                    title?: T;
                    subtitle?: T;
                  };
              body?: T;
              featuredItems?: T;
              id?: T;
              blockName?: T;
            };
        listBlock?:
          | T
          | {
              header?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                  };
              body?: T;
              list?:
                | T
                | {
                    itemType?: T;
                    listCard?:
                      | T
                      | {
                          title?: T;
                          rate?: T;
                          description?: T;
                          note?: T;
                        };
                    listButton?:
                      | T
                      | {
                          body?: T;
                          label?: T;
                          linkType?: T;
                          internalLink?:
                            | T
                            | {
                                targetPage?: T;
                                targetSection?: T;
                              };
                          externalLink?:
                            | T
                            | {
                                url?: T;
                                targetType?: T;
                              };
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              image?: T;
              tagline?: T;
              heading?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        mediaWTitle?:
          | T
          | {
              images?: T;
              tagline?: T;
              title?: T;
              link?: T;
              id?: T;
              blockName?: T;
            };
        newsletter?:
          | T
          | {
              img?: T;
              heading?: T;
              body?: T;
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        promo?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        textColumns?:
          | T
          | {
              textColumns?:
                | T
                | {
                    textColumn?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  layoutSections?:
    | T
    | {
        grid?:
          | T
          | {
              background?:
                | T
                | {
                    sectionWidth?: T;
                    type?: T;
                    clr?: T;
                    img?: T | {};
                  };
              padding?:
                | T
                | {
                    type?: T;
                    size?: T;
                  };
              sections?: T;
              gap?:
                | T
                | {
                    gapSize?: T;
                    inlineGapSize?: T;
                    blockGapSize?: T;
                    separateGap?: T;
                  };
              components?:
                | T
                | {
                    richText?: T | TextBlockSelect<T>;
                    image?:
                      | T
                      | {
                          position?: T;
                          position_halves?: T;
                          position_thirds?: T;
                          position_quarters?: T;
                          position_sixths?: T;
                          rows?: T;
                          padding?:
                            | T
                            | {
                                type?: T;
                                size?: T;
                              };
                          image?: T;
                          aspectRatio?: T;
                          imagePosition?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        flex?:
          | T
          | {
              background?:
                | T
                | {
                    sectionWidth?: T;
                    type?: T;
                    clr?: T;
                    img?: T | {};
                  };
              padding?:
                | T
                | {
                    type?: T;
                    size?: T;
                  };
              components?:
                | T
                | {
                    richText?: T | TextBlockSelect<T>;
                    image?:
                      | T
                      | {
                          position?: T;
                          position_halves?: T;
                          position_thirds?: T;
                          position_quarters?: T;
                          position_sixths?: T;
                          rows?: T;
                          padding?:
                            | T
                            | {
                                type?: T;
                                size?: T;
                              };
                          image?: T;
                          aspectRatio?: T;
                          imagePosition?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  permittedUsers?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Text Block_select".
 */
export interface TextBlockSelect {
  position?: boolean;
  position_halves?: boolean;
  position_thirds?: boolean;
  position_quarters?: boolean;
  position_sixths?: boolean;
  padding?:
    | boolean
    | {
        type?: boolean;
        size?: boolean;
      };
  body?: boolean;
  id?: boolean;
  blockName?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publications_select".
 */
export interface PublicationsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  blurb?: T;
  coverImg?: T;
  quotes?:
    | T
    | {
        quote?: T;
        id?: T;
      };
  testimonials?:
    | T
    | {
        quote?: T;
        quotee?: T;
        id?: T;
      };
  description?: T;
  releaseDetails?:
    | T
    | {
        category?: T;
        isPublished?: T;
        publishedDate?: T;
        publishedIn?:
          | T
          | {
              publicationType?: T;
              magazine?:
                | T
                | {
                    title?: T;
                    date?: T;
                    url?: T;
                  };
              collectionTitle?: T;
              id?: T;
            };
      };
  retailerLinks?:
    | T
    | {
        retailer?: T;
        url?: T;
        id?: T;
      };
  categoryName?: T;
  releaseDate?: T;
  permittedUsers?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "publicationCategories_select".
 */
export interface PublicationCategoriesSelect<T extends boolean = true> {
  title?: T;
  categoryJoin?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings".
 */
export interface SiteSetting {
  id: string;
  siteTitle: string;
  siteLogo?: (string | null) | Image;
  favicon?: (string | null) | Icon;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  items: {
    page: string | Page;
    navigation?:
      | (
          | {
              displayLogo?: boolean | null;
              chooseLogo?: ('Default' | 'Minimal') | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'logo';
            }
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'copyright';
            }
          | {
              items?:
                | {
                    label?: {
                      label?: string | null;
                      displayLabel?: boolean | null;
                      ariaLabel?: string | null;
                      linkIcon?: (string | null) | Icon;
                    };
                    link: {
                      linkType?: ('Internal' | 'External') | null;
                      internalLink?: {
                        targetType?: ('Page' | 'Page section' | 'Publication') | null;
                        targetPage?: (string | null) | Page;
                        targetSection?: string | null;
                        targetPublication?: (string | null) | Publication;
                        readPublicationSlug?: string | null;
                      };
                      URL: string;
                      targetType?: ('_self' | '_blank') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'linkArray';
            }
        )[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navigation?:
    | (
        | {
            displayLogo?: boolean | null;
            chooseLogo?: ('Default' | 'Minimal') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'logo';
          }
        | {
            id?: string | null;
            blockName?: string | null;
            blockType: 'copyright';
          }
        | {
            items?:
              | {
                  label?: {
                    label?: string | null;
                    displayLabel?: boolean | null;
                    ariaLabel?: string | null;
                    linkIcon?: (string | null) | Icon;
                  };
                  link: {
                    linkType?: ('Internal' | 'External') | null;
                    internalLink?: {
                      targetType?: ('Page' | 'Page section' | 'Publication') | null;
                      targetPage?: (string | null) | Page;
                      targetSection?: string | null;
                      targetPublication?: (string | null) | Publication;
                      readPublicationSlug?: string | null;
                    };
                    URL: string;
                    targetType?: ('_self' | '_blank') | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'linkArray';
          }
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteSettings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteTitle?: T;
  siteLogo?: T;
  favicon?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  items?:
    | T
    | {
        page?: T;
        navigation?:
          | T
          | {
              logo?:
                | T
                | {
                    displayLogo?: T;
                    chooseLogo?: T;
                    id?: T;
                    blockName?: T;
                  };
              copyright?:
                | T
                | {
                    id?: T;
                    blockName?: T;
                  };
              linkArray?:
                | T
                | {
                    items?:
                      | T
                      | {
                          label?:
                            | T
                            | {
                                label?: T;
                                displayLabel?: T;
                                ariaLabel?: T;
                                linkIcon?: T;
                              };
                          link?:
                            | T
                            | {
                                linkType?: T;
                                internalLink?:
                                  | T
                                  | {
                                      targetType?: T;
                                      targetPage?: T;
                                      targetSection?: T;
                                      targetPublication?: T;
                                      readPublicationSlug?: T;
                                    };
                                URL?: T;
                                targetType?: T;
                              };
                          id?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navigation?:
    | T
    | {
        logo?:
          | T
          | {
              displayLogo?: T;
              chooseLogo?: T;
              id?: T;
              blockName?: T;
            };
        copyright?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        linkArray?:
          | T
          | {
              items?:
                | T
                | {
                    label?:
                      | T
                      | {
                          label?: T;
                          displayLabel?: T;
                          ariaLabel?: T;
                          linkIcon?: T;
                        };
                    link?:
                      | T
                      | {
                          linkType?: T;
                          internalLink?:
                            | T
                            | {
                                targetType?: T;
                                targetPage?: T;
                                targetSection?: T;
                                targetPublication?: T;
                                readPublicationSlug?: T;
                              };
                          URL?: T;
                          targetType?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}